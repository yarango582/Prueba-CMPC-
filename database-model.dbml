// Modelo Relacional CMPC-Libros
// Creado para dbdiagram.io

Table users {
  id uuid [primary key, default: `gen_random_uuid()`]
  email varchar(255) [unique, not null]
  password varchar(255) [not null]
  first_name varchar(100) [not null]
  last_name varchar(100) [not null]
  role user_role [not null, default: 'user']
  is_active boolean [default: true]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  deleted_at timestamp [null]
  
  indexes {
    email [unique]
    (deleted_at, is_active)
  }
}

Table authors {
  id uuid [primary key, default: `gen_random_uuid()`]
  first_name varchar(100) [not null]
  last_name varchar(100) [not null]
  biography text
  birth_date date
  nationality varchar(100)
  is_active boolean [default: true]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  deleted_at timestamp [null]
  
  indexes {
    (first_name, last_name)
    deleted_at
  }
}

Table publishers {
  id uuid [primary key, default: `gen_random_uuid()`]
  name varchar(200) [not null, unique]
  address text
  phone varchar(20)
  email varchar(255)
  website varchar(255)
  is_active boolean [default: true]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  deleted_at timestamp [null]
  
  indexes {
    name [unique]
    deleted_at
  }
}

Table genres {
  id uuid [primary key, default: `gen_random_uuid()`]
  name varchar(100) [not null, unique]
  description text
  is_active boolean [default: true]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  deleted_at timestamp [null]
  
  indexes {
    name [unique]
    deleted_at
  }
}

Table books {
  id uuid [primary key, default: `gen_random_uuid()`]
  title varchar(300) [not null]
  isbn varchar(20) [unique]
  price decimal(10,2) [not null]
  stock_quantity integer [not null, default: 0]
  publication_date date
  pages integer
  language varchar(50) [default: 'EspaÃ±ol']
  description text
  image_url varchar(500)
  author_id uuid [not null, ref: > authors.id]
  publisher_id uuid [not null, ref: > publishers.id]
  genre_id uuid [not null, ref: > genres.id]
  is_available boolean [default: true]
  is_active boolean [default: true]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  deleted_at timestamp [null]
  
  indexes {
    title
    isbn [unique]
    (author_id, title)
    (genre_id, is_available)
    (publisher_id, publication_date)
    deleted_at
    (is_available, is_active, deleted_at)
  }
}

Table book_inventory_logs {
  id uuid [primary key, default: `gen_random_uuid()`]
  book_id uuid [not null, ref: > books.id]
  operation_type inventory_operation [not null]
  quantity_change integer [not null]
  previous_stock integer [not null]
  new_stock integer [not null]
  reason varchar(255)
  user_id uuid [not null, ref: > users.id]
  created_at timestamp [default: `now()`]
  
  indexes {
    book_id
    (book_id, created_at)
    (user_id, created_at)
    operation_type
  }
}

Table audit_logs {
  id uuid [primary key, default: `gen_random_uuid()`]
  table_name varchar(100) [not null]
  record_id uuid [not null]
  operation audit_operation [not null]
  old_values jsonb
  new_values jsonb
  user_id uuid [ref: > users.id]
  user_ip varchar(45)
  user_agent text
  created_at timestamp [default: `now()`]
  
  indexes {
    (table_name, record_id)
    (user_id, created_at)
    operation
    created_at
  }
}

// Enums
Enum user_role {
  admin
  manager
  user
}

Enum inventory_operation {
  stock_in
  stock_out
  adjustment
  initial_stock
}

Enum audit_operation {
  CREATE
  UPDATE
  DELETE
  SOFT_DELETE
  RESTORE
}

// Relaciones con nombres explÃ­citos
Ref: books.author_id > authors.id [delete: restrict]
Ref: books.publisher_id > publishers.id [delete: restrict]  
Ref: books.genre_id > genres.id [delete: restrict]
Ref: book_inventory_logs.book_id > books.id [delete: cascade]
Ref: book_inventory_logs.user_id > users.id [delete: restrict]
Ref: audit_logs.user_id > users.id [delete: set null]
