version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: cmpc-postgres
    environment:
      POSTGRES_DB: cmpc_libros
      POSTGRES_USER: cmpc_user
      POSTGRES_PASSWORD: cmpc_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init:/docker-entrypoint-initdb.d
    networks:
      - cmpc-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cmpc_user -d cmpc_libros"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend NestJS
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: cmpc-backend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: cmpc_libros
      DATABASE_USER: cmpc_user
      DATABASE_PASSWORD: cmpc_password
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      UPLOAD_PATH: /app/uploads
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cmpc-network
    command: npm run start:dev
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: cmpc-frontend
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:3000/api
      VITE_APP_NAME: CMPC Libros
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - cmpc-network
    command: npm run dev

  # PgAdmin para administración de BD (opcional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: cmpc-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@cmpc.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - cmpc-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  cmpc-network:
    driver: bridge

# Para desarrollo rápido (sin herramientas adicionales):
# docker-compose up postgres backend frontend

# Para desarrollo completo (incluye PgAdmin):
# docker-compose --profile tools up
